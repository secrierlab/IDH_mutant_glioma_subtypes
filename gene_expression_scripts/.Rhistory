require("biomaRt")
human = useEnsembl("ensembl", dataset = "hsapiens_gene_ensembl",version="102")
mouse = useEnsembl("ensembl", dataset = "mmusculus_gene_ensembl",version="102")
humanx = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = x , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
return(humanx)
}
integrated_conversion_mouse_human<-function(mgi,ensembl){
#common elements between mouse and human
mgi_table<-mgi[,c(1,5)]
specifics_mgi<-setdiff(x=mgi_table[,2],y=ensembl[,1])
specifics_mgi_table<-mgi_table[mgi_table[,2]%in%specifics_mgi,]
colnames(specifics_mgi_table)<-c("hs","mm")
specifics_ensembl<-setdiff(x=ensembl[,1],y=mgi_table[,2])
specifics_ensembl_table<-ensembl[ensembl[,1]%in%specifics_ensembl,c(2,1)]
colnames(specifics_ensembl_table)<-c("hs","mm")
#take the common genes from mgi
common_mgi_ensembl<-intersect(mgi_table[,2],ensembl[,1])
common_table<-mgi_table[mgi_table[,2]%in%common_mgi_ensembl,]
colnames(common_table)<-c("hs","mm")
res_annotation<-rbind(common_table,specifics_ensembl_table,specifics_mgi_table)
return(res_annotation)
}
library(biomaRt)
library(sva)
library(edgeR)
library(pheatmap)
library(sva)
library(glmnet)
library(ComplexHeatmap)
library(data.table)
library(circlize)
library(stringr)
library(stringi)
source("convert_mouse_to_human.R")
# Upload the RNA-seq values from Human
load('tcga.lgg.mut.RData')
# Upload the RNA-seq values from Human
load('../../tcga.lgg.mut.RData')
# Upload the RNA-seq values from Human
load('../../tme/tcga.lgg.mut.RData')
load('../../tme/tcga.gbm.mut.RData')
input_ge<-rbind(tcga.gbm,tcga.lgg)
input_ge[1:4,]
input_ge[1:4,1:4]
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
col_to_select[1:4,]
col_to_select
#load annotation data
load("../../tme/annotation_gbm_lgg.RData")
#load annotation data
load("data/annotation_gbm_lgg.RData")
#load annotation
load("data/CGGA_ann.RData")
#load microarray for metanalysis
load("database_microarray_brain.RData")
#load microarray for metanalysis
load("data/database_microarray_brain.RData")
### Read in DEGs:
genes <- read.csv("../../DESeq2_annotMar2022_v2_summary/Adi.DE.signature.csv")
genes[1:4,]
c1c2up <- unique(setdiff(genes$Adi.Comp1_C1_vs_C2_UP,""))
c1c2up
length(c1c2up)
c1c2 <- unique(setdiff(genes$Adi.Comp1_C1_vs_C2_DEG,""))
length(c1c2)
c1c2down <- unique(setdiff(genes$Adi.Comp1_C1_vs_C2_DN,""))
length(c1c2down)
ortholog_table_ensembl<-unique(convertMouseGeneList(c1c2))
source("convert_mouse_to_human.R")
ortholog_table_ensembl<-unique(convertMouseGeneList(c1c2))
?useMart
source("convert_mouse_to_human.R")
ortholog_table_ensembl<-unique(convertMouseGeneList(c1c2))
?useEnsembl
ortholog_table_ensembl<-unique(convertMouseGeneList2(c1c2))
ortholog_table_ensembl
ortholog_table_ensembl[1:4,]
save(hs_genes_sig, file="data/hs_genes_sig.RData")
hs_genes_sig<-unique(ortholog_table_ensembl[,2])
hs_genes_sig
save(hs_genes_sig, file="data/hs_genes_sig.RData")
#
# Create matrix h.sapiens --NOT-- processed with combat
#
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
matrix_to_plot_hs_nocombat<-t(input_ge[,-c(which(colnames(input_ge)%in%col_to_select))])
colnames(matrix_to_plot_hs_nocombat)<-unlist(lapply(X=strsplit(input_ge$Sample,split='\\-'),FUN=function(X)paste(X[1:3],collapse='-')))
matrix_to_plot_hs_nocombat2<-matrix_to_plot_hs_nocombat[which(rownames(matrix_to_plot_hs_nocombat)%in%hs_genes_sig),]
source("support_functions_heatmaps.R")
source("support_functions_MutBurden_GE_METH.R")
source("create_matrix_meth.R")
source("support_function_heatmap_mouse.R")
setwd(output_dir)
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
# No Combat: all cancers
output_hs<-paste(paste('heatmapTCGA.method.fc',pval,lfc,sep='.'),'.nocombat.pdf',sep='')
# No Combat: all cancers
output_hs<-paste(paste('heatmapTCGA.nocombat.pdf',sep=''))
# No Combat: all cancers
output_hs<-paste('heatmapTCGA.nocombat.pdf',sep='')
output_hs_var<-paste('heatmapTCGA.nocombat.var.pdf',sep='')
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2)
library(ConsensusClusterPlus)
results = ConsensusClusterPlus(matrix_to_plot_hs_nocombat2,
maxK=10,
reps=50,
pItem=0.8,
pFeature=1,
title="test",
clusterAlg="km",
seed=1262118388.71279,plot="png")
results = ConsensusClusterPlus(matrix_to_plot_hs_nocombat2,
maxK=10,
reps=50,
pItem=0.8,
pFeature=1,
title="test",
clusterAlg="km",
seed=1262118388.71279,plot="pdf")
classesdf<-data.frame(ID=names(results[[8]]$consensusClass),
classes=results[[8]]$consensusClass)
library(glmnet)
cvfit = cv.glmnet(t(matrix_to_plot_hs_nocombat2),classesdf$classes,type.measure="class",alpha=1,family="multinomial")
test<-coef(cvfit, s = "lambda.min")
resLasso<-function(x){
idx<-which(x!=0)
cg<-names(x[idx,])[-1]
return(cg)
}
signatureGenes<-unique(unlist(lapply(test,resLasso)))
output_hs<-paste('method.fc.nocombat.test.png')
output_hs_var<-paste('method.fc.nocombat.var.test.pdf')
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,km=F,split=T,how_split=classesdf$classes,number_clusters_row=2)
# No Combat: all cancers
output_hs<-'heatmapTCGA.nocombat.pdf'
output_hs_var<-'heatmapTCGA.nocombat.var.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2)
classesdf<-data.frame(ID=names(results[[4]]$consensusClass),
classes=results[[4]]$consensusClass)
source("convert_mouse_to_human.R")
# Upload the RNA-seq values from Human
load('../../tme/tcga.lgg.mut.RData')
load('../../tme/tcga.gbm.mut.RData')
input_ge<-rbind(tcga.gbm,tcga.lgg)
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
#load annotation data
load("data/annotation_gbm_lgg.RData")
#load annotation
load("data/CGGA_ann.RData")
#load microarray for metanalysis
load("data/database_microarray_brain.RData")
### Read in DEGs:
genes <- read.csv("../../DESeq2_annotMar2022_v2_summary/Adi.DE.signature.csv")
c1c2 <- unique(setdiff(genes$Adi.Comp1_C1_vs_C2_DEG,""))
load("data/hs_genes_sig.RData")
hs_genes_sig[1:4,]
hs_genes_sig
#
# Create matrix h.sapiens --NOT-- processed with combat
#
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
matrix_to_plot_hs_nocombat<-t(input_ge[,-c(which(colnames(input_ge)%in%col_to_select))])
colnames(matrix_to_plot_hs_nocombat)<-unlist(lapply(X=strsplit(input_ge$Sample,split='\\-'),FUN=function(X)paste(X[1:3],collapse='-')))
matrix_to_plot_hs_nocombat2<-matrix_to_plot_hs_nocombat[which(rownames(matrix_to_plot_hs_nocombat)%in%hs_genes_sig),]
source("support_functions_heatmaps.R")
source("support_functions_MutBurden_GE_METH.R")
source("create_matrix_meth.R")
source("support_function_heatmap_mouse.R")
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
# No Combat: all cancers
output_hs<-'heatmapTCGA.nocombat.pdf'
output_hs_var<-'heatmapTCGA.nocombat.var.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2)
library(ComplexHeatmap)
library(pheatmap)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2, png_output=F)
library(ConsensusClusterPlus)
results = ConsensusClusterPlus(matrix_to_plot_hs_nocombat2,
maxK=10,
reps=50,
pItem=0.8,
pFeature=1,
title="test",
clusterAlg="km",
seed=1262118388.71279,plot="pdf")
results = ConsensusClusterPlus(matrix_to_plot_hs_nocombat2,
maxK=5,
reps=50,
pItem=0.8,
pFeature=1,
title="test",
clusterAlg="km",
seed=1262118388.71279,plot="pdf")
classesdf<-data.frame(ID=names(results[[4]]$consensusClass),
classes=results[[4]]$consensusClass)
library(glmnet)
cvfit = cv.glmnet(t(matrix_to_plot_hs_nocombat2),classesdf$classes,type.measure="class",alpha=1,family="multinomial")
test<-coef(cvfit, s = "lambda.min")
resLasso<-function(x){
idx<-which(x!=0)
cg<-names(x[idx,])[-1]
return(cg)
}
signatureGenes<-unique(unlist(lapply(test,resLasso)))
output_hs<-'method.fc.nocombat.test.pdf'
output_hs_var<-'method.fc.nocombat.var.test.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],annotation_all,output_hs=output_hs,output_hs2=output_hs_var,png_output=F,column_title="DEGs mm in GBM and LGG,no combat",width=10,km=F,split=T,how_split=classesdf$classes,number_clusters_row=2)
classesdf<-data.frame(ID=names(results[[3]]$consensusClass),
classes=results[[3]]$consensusClass)
library(glmnet)
cvfit = cv.glmnet(t(matrix_to_plot_hs_nocombat2),classesdf$classes,type.measure="class",alpha=1,family="multinomial")
test<-coef(cvfit, s = "lambda.min")
resLasso<-function(x){
idx<-which(x!=0)
cg<-names(x[idx,])[-1]
return(cg)
}
signatureGenes<-unique(unlist(lapply(test,resLasso)))
output_hs<-'method.fc.nocombat.test.pdf'
output_hs_var<-'method.fc.nocombat.var.test.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],annotation_all,output_hs=output_hs,output_hs2=output_hs_var,png_output=F,column_title="DEGs mm in GBM and LGG,no combat",width=10,km=F,split=T,how_split=classesdf$classes,number_clusters_row=2)
library(biomaRt)
library(sva)
library(edgeR)
library(pheatmap)
library(sva)
library(glmnet)
library(ComplexHeatmap)
library(data.table)
library(circlize)
library(stringr)
library(stringi)
source("convert_mouse_to_human.R")
source("convert_mouse_to_human.R")
# Upload the RNA-seq values from Human
load('../../tme/tcga.lgg.mut.RData')
load('../../tme/tcga.gbm.mut.RData')
input_ge<-rbind(tcga.gbm,tcga.lgg)
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
#load annotation data
load("data/annotation_gbm_lgg.RData")
#load annotation
load("data/CGGA_ann.RData")
#load microarray for metanalysis
load("data/database_microarray_brain.RData")
### Read in DEGs:
genes <- read.csv("../../DESeq2_annotMar2022_v2_summary/Adi.DE.signature.csv")
c1c2 <- unique(setdiff(genes$Adi.Comp1_C1_vs_C2_DEG,""))
ortholog_table_ensembl<-unique(convertMouseGeneList2(c1c2))
load("data/hs_genes_sig.RData")
#
# Create matrix h.sapiens --NOT-- processed with combat
#
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
matrix_to_plot_hs_nocombat<-t(input_ge[,-c(which(colnames(input_ge)%in%col_to_select))])
colnames(matrix_to_plot_hs_nocombat)<-unlist(lapply(X=strsplit(input_ge$Sample,split='\\-'),FUN=function(X)paste(X[1:3],collapse='-')))
matrix_to_plot_hs_nocombat2<-matrix_to_plot_hs_nocombat[which(rownames(matrix_to_plot_hs_nocombat)%in%hs_genes_sig),]
matrix_to_plot_hs_nocombat2[1:4,]
source("support_functions_heatmaps.R")
source("support_functions_MutBurden_GE_METH.R")
source("create_matrix_meth.R")
source("support_function_heatmap_mouse.R")
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
annotation_all[1:4,]
## Next, load TCGA C1AB annot and add here:
c1abannot <- read.xls("../../tme/TCGA_GBM_LGG_GeneSig_median_cBio_wCNV_r1234.IDHmut.annot.plusTME.xlsx")
library(gdata)
## Next, load TCGA C1AB annot and add here:
c1abannot <- read.xls("../../tme/TCGA_GBM_LGG_GeneSig_median_cBio_wCNV_r1234.IDHmut.annot.plusTME.xlsx")
c1abannot[1:4,]
annotation_all <- merge(annotation_all,
c1abannot[,c("patient","Mar2022.Comp8_C1A_vs_C1B_DN","C1AB")],
by.x="Sample", by.y="patient",
all.x=TRUE, all.y=FALSE)
c1abannot$Mar2022.Comp8_C1A_vs_C1B_DN
c1abannot$patient
c1abannot$C1AB
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
annotation_all <- merge(annotation_all,
c1abannot[,c("patient","Mar2022.Comp8_C1A_vs_C1B_DN","C1AB")],
by.x="Samples", by.y="patient",
all.x=TRUE, all.y=FALSE)
annotation_all[1:4,]
# No Combat: all cancers
output_hs<-'heatmapTCGA.nocombat.plusC1AB.pdf'
output_hs_var<-'heatmapTCGA.nocombat.var.plusC1AB.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2, png_output=F)
library(ComplexHeatmap)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2, png_output=F)
matrix_to_plot_hs_nocombat2[1:4,]
annotation_all$type
onlylgg <- annotation_all[which(annotation_all$type == "LGG"),]$Samples
matrix_to_plot_hs_nocombat2.lgg<-matrix_to_plot_hs_nocombat2[,Samples]
matrix_to_plot_hs_nocombat2.lgg<-matrix_to_plot_hs_nocombat2[,onlylgg]
onlylgg
matrix_to_plot_hs_nocombat2[1:4,]
matrix_to_plot_hs_nocombat2.lgg<-matrix_to_plot_hs_nocombat2[,which(colnames(matrix_to_plot_hs_nocombat2.lgg) %in% onlylgg)]
matrix_to_plot_hs_nocombat2.lgg<-matrix_to_plot_hs_nocombat2[,which(colnames(matrix_to_plot_hs_nocombat2) %in% onlylgg)]
dim(matrix_to_plot_hs_nocombat2.lgg)
annotation_all.lgg <- annotation_all[which(annotation_all$Samples %in% colnames(matrix_to_plot_hs_nocombat2.lgg)),]
output_hs<-'heatmapTCGA.nocombat.plusC1AB.onlyLGG.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2.lgg,annotation_all.lgg,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2, png_output=F)
library(biomaRt)
library(sva)
library(edgeR)
library(pheatmap)
library(sva)
library(glmnet)
library(ComplexHeatmap)
library(data.table)
library(circlize)
library(stringr)
library(stringi)
library(gdata)
source("convert_mouse_to_human.R")
# Upload the RNA-seq values from Human
load('../../tme/tcga.lgg.mut.RData')
load('../../tme/tcga.gbm.mut.RData')
input_ge<-rbind(tcga.gbm,tcga.lgg)
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
#load annotation data
load("data/annotation_gbm_lgg.RData")
#load annotation
load("data/CGGA_ann.RData")
#load microarray for metanalysis
load("data/database_microarray_brain.RData")
### Read in DEGs:
genes <- read.csv("../../DESeq2_annotMar2022_v2_summary/Adi.DE.signature.csv")
c1c2 <- unique(setdiff(genes$Adi.Comp1_C1_vs_C2_DEG,""))
ortholog_table_ensembl<-unique(convertMouseGeneList2(c1c2))
load("data/hs_genes_sig.RData")
#
# Create matrix h.sapiens --NOT-- processed with combat
#
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
matrix_to_plot_hs_nocombat<-t(input_ge[,-c(which(colnames(input_ge)%in%col_to_select))])
colnames(matrix_to_plot_hs_nocombat)<-unlist(lapply(X=strsplit(input_ge$Sample,split='\\-'),FUN=function(X)paste(X[1:3],collapse='-')))
matrix_to_plot_hs_nocombat2<-matrix_to_plot_hs_nocombat[which(rownames(matrix_to_plot_hs_nocombat)%in%hs_genes_sig),]
source("support_functions_heatmaps.R")
source("support_functions_MutBurden_GE_METH.R")
source("create_matrix_meth.R")
source("support_function_heatmap_mouse.R")
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
## Next, load TCGA C1AB annot and add here:
c1abannot <- read.xls("../../tme/TCGA_GBM_LGG_GeneSig_median_cBio_wCNV_r1234.IDHmut.annot.plusTME.xlsx")
annotation_all <- merge(annotation_all,
c1abannot[,c("patient","Mar2022.Comp8_C1A_vs_C1B_DN","C1AB")],
by.x="Samples", by.y="patient",
all.x=TRUE, all.y=FALSE)
# No Combat: all cancers
output_hs<-'heatmapTCGA.nocombat.plusC1AB.pdf'
output_hs_var<-'heatmapTCGA.nocombat.var.plusC1AB.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=2, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=3, number_clusters_col = 4, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=3, number_clusters_column = 4, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=3, png_output=F)
library(ConsensusClusterPlus)
results = ConsensusClusterPlus(matrix_to_plot_hs_nocombat2,
maxK=5,
reps=50,
pItem=0.8,
pFeature=1,
title="test",
clusterAlg="km",
seed=1262118388.71279,plot="pdf")
classesdf<-data.frame(ID=names(results[[4]]$consensusClass),
classes=results[[4]]$consensusClass)
library(glmnet)
cvfit = cv.glmnet(t(matrix_to_plot_hs_nocombat2),classesdf$classes,type.measure="class",alpha=1,family="multinomial")
test<-coef(cvfit, s = "lambda.min")
resLasso<-function(x){
idx<-which(x!=0)
cg<-names(x[idx,])[-1]
return(cg)
}
signatureGenes<-unique(unlist(lapply(test,resLasso)))
output_hs<-'method.fc.nocombat.test.pdf'
output_hs_var<-'method.fc.nocombat.var.test.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],annotation_all,output_hs=output_hs,output_hs2=output_hs_var,png_output=F,column_title="DEGs mm in GBM and LGG,no combat",width=10,km=F,split=T,how_split=classesdf$classes,number_clusters_row=2)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,km=F,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],annotation_all,output_hs=output_hs,output_hs2=output_hs_var,png_output=F,column_title="DEGs mm in GBM and LGG,no combat",width=10,km=F,split=T,how_split=classesdf$classes,number_clusters_row=3)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
c1abannot[1:4,]
c1c2[1:4,]
c1c2
hs_genes_sig
ortholog_table_ensembl<-unique(convertMouseGeneList2(c1c2))
hs_genes_sig<-unique(ortholog_table_ensembl[,2])
save(hs_genes_sig, file="data/hs_genes_sig.RData")
#
# Create matrix h.sapiens --NOT-- processed with combat
#
col_to_select<-c(colnames(input_ge[,c(1:6)]),'Type')
matrix_to_plot_hs_nocombat<-t(input_ge[,-c(which(colnames(input_ge)%in%col_to_select))])
colnames(matrix_to_plot_hs_nocombat)<-unlist(lapply(X=strsplit(input_ge$Sample,split='\\-'),FUN=function(X)paste(X[1:3],collapse='-')))
matrix_to_plot_hs_nocombat2<-matrix_to_plot_hs_nocombat[which(rownames(matrix_to_plot_hs_nocombat)%in%hs_genes_sig),]
source("support_functions_heatmaps.R")
source("support_functions_MutBurden_GE_METH.R")
source("create_matrix_meth.R")
source("support_function_heatmap_mouse.R")
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
## Next, load TCGA C1AB annot and add here:
c1abannot <- read.xls("../../tme/TCGA_GBM_LGG_GeneSig_median_cBio_wCNV_r1234.IDHmut.annot.plusTME.xlsx")
c1abannot[1:4,]
# Read DE signatures for C1A/B:
sigs <- read.csv("../DESeq2_annotMar2022_v2_summary/Adi.ALL.log2FC.csv")
## Next, load TCGA C1AB annot and add here:
c1abannot <- read.xls("../../tme/TCGA_GBM_LGG_GeneSig_median_cBio_wCNV_r1234.IDHmut.annot.plusTME.xlsx")
annotation_all <- merge(annotation_all,
c1abannot[,c("patient","Mar2022.Comp8_C1A_vs_C1B_DN","C1AB")],
by.x="Samples", by.y="patient",
all.x=TRUE, all.y=FALSE)
annotation_all<-ann3[,c("Samples","type","IDH1_R132H","TP53","ATRX","PDGFRA","IDH_codel_subtype","chr7_gain_chr_10loss","histology","clusters")]
annotation_all <- merge(annotation_all,
c1abannot[,c("patient","Mar2022.Comp8_C1A_vs_C1B_DN","C1AB")],
by.x="Samples", by.y="patient",
all.x=TRUE, all.y=FALSE)
# No Combat: all cancers
output_hs<-'heatmapTCGA.nocombat.plusC1AB.pdf'
output_hs_var<-'heatmapTCGA.nocombat.var.plusC1AB.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2,annotation_all,output_hs=output_hs,output_hs2=output_hs_var,column_title="DEGs mm in GBM and LGG,no combat",width=10,split=TRUE,km=TRUE,number_clusters_row=3, png_output=F)
library(ConsensusClusterPlus)
results = ConsensusClusterPlus(matrix_to_plot_hs_nocombat2,
maxK=5,
reps=50,
pItem=0.8,
pFeature=1,
title="test",
clusterAlg="km",
seed=1262118388.71279,plot="pdf")
results = ConsensusClusterPlus(matrix_to_plot_hs_nocombat2,
maxK=4,
reps=50,
pItem=0.8,
pFeature=1,
title="test",
clusterAlg="km",
seed=1262118388.71279,plot="pdf")
classesdf<-data.frame(ID=names(results[[3]]$consensusClass),
classes=results[[3]]$consensusClass)
library(glmnet)
cvfit = cv.glmnet(t(matrix_to_plot_hs_nocombat2),classesdf$classes,type.measure="class",alpha=1,family="multinomial")
test<-coef(cvfit, s = "lambda.min")
resLasso<-function(x){
idx<-which(x!=0)
cg<-names(x[idx,])[-1]
return(cg)
}
signatureGenes<-unique(unlist(lapply(test,resLasso)))
output_hs<-'method.fc.nocombat.test.pdf'
output_hs_var<-'method.fc.nocombat.var.test.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
output_hs<-'method.fc.combatsig.3cl.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
classesdf<-data.frame(ID=names(results[[2]]$consensusClass),
classes=results[[2]]$consensusClass)
library(glmnet)
cvfit = cv.glmnet(t(matrix_to_plot_hs_nocombat2),classesdf$classes,type.measure="class",alpha=1,family="multinomial")
test<-coef(cvfit, s = "lambda.min")
resLasso<-function(x){
idx<-which(x!=0)
cg<-names(x[idx,])[-1]
return(cg)
}
signatureGenes<-unique(unlist(lapply(test,resLasso)))
output_hs<-'method.fc.combatsig.2cl.pdf'
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
plot_heatmap_hs(matrix_to_plot_hs_nocombat2[rownames(matrix_to_plot_hs_nocombat2)%in%signatureGenes,],
annotation_all,output_hs=output_hs,output_hs2=output_hs_var,
column_title="DEGs mm in GBM and LGG,combat",width=10,split=TRUE,
km=T,number_clusters_row=3, png_output=F)
